syntax = "proto3";
package irismod.token;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "token/token.proto";

option go_package = "github.com/irisnet/service-sdk-go/base_modules/token";

// Query creates service with token as rpc
service Query {
    // Token returns token with token name
    rpc Token(QueryTokenRequest) returns (QueryTokenResponse) {
        option (google.api.http).get = "/irismod/token/tokens/{denom}";
    }
}

// QueryTokenRequest is request type for the Query/Token RPC method
message QueryTokenRequest {
    string denom = 1;
}

// QueryTokenResponse is response type for the Query/Token RPC method
message QueryTokenResponse {
    google.protobuf.Any Token = 1 [ (cosmos_proto.accepts_interface) = "ContentI" ];
}
